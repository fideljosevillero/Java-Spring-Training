<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.fideljose.training.Controllers" />
	
	<!-- my code -->
	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mappingLocations">
			<beans:list>
				<!-- <beans:value>classpath:org/joedayz/corespringtest/model/Category.hbm.xml</beans:value>
				<beans:value>classpath:org/joedayz/corespringtest/model/Product.hbm.xml</beans:value> -->
				<!-- <beans:value>classpath:Category.hbm.xml</beans:value> -->
				<beans:value>classpath*:Category.hbm.xml</beans:value>
				<beans:value>classpath*:Product.hbm.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:value>
				hibernate.dialect 				= 	org.hibernate.dialect.MySQL5InnoDBDialect
				hibernate.format_sql			=	true
				hibernate.show_sql				=	true
			</beans:value>
		</beans:property>		
	</beans:bean>
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<beans:property name="url" value="jdbc:mysql://localhost:3306/online"/>
		<beans:property name="username" value="root"/>
		<beans:property name="password" value="1234567"/>
	</beans:bean>

	<!-- Weaves in transactional advice around @Transactional methods -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Drives transactions using Hibernate APIs when requested -->
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
		
	<!-- Translates Hibernate exceptions to Spring Data Access Exceptions -->
 	<beans:bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	<!--  -->
	
	<beans:bean id="ProductValidator" class="com.fideljose.training.Controllers.ProductValidator">
	</beans:bean>
	<!-- <beans:bean id="ProductManager" class="com.fideljose.training.Service.ProductManager"></beans:bean> -->
	
</beans:beans>
